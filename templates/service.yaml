apiVersion: v1
kind: Service
metadata:
  name: {{ include "ambassador.fullname" . }}
  namespace: {{ include "ambassador.namespace" . }}
  labels:
    app.kubernetes.io/name: {{ include "ambassador.name" . }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ include "ambassador.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.deploymentTool }}
    app.kubernetes.io/managed-by: {{ .Values.deploymentTool }}
    {{- else }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- end }}
    app.kubernetes.io/component: ambassador-service
    product: aes
  annotations:
    app.getambassador.io/owner: "Ambassador Labs"
    app.getambassador.io/repository: github.com/datawire/ambassador
    app.getambassador.io/description: "The Ambassador Edge Stack goes beyond traditional API Gateways and Ingress Controllers with the advanced edge features needed to support developer self-service and full-cycle development."
    app.getambassador.io/documentation: https://www.getambassador.io/docs/latest/
    app.getambassador.io/chat: http://d6e.co/slack
    app.getambassador.io/bugs: https://github.com/datawire/ambassador/issues
    app.getambassador.io/support: https://www.getambassador.io/about-us/support/
    app.getambassador.io/dependencies: "Redis"
{{- if .Values.service.annotations }}
  {{- range $key, $value := .Values.service.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
{{- end }}
spec:
  type: {{ .Values.service.type }}
  {{- if .Values.service.loadBalancerIP }}
  loadBalancerIP: "{{ .Values.service.loadBalancerIP }}"
  {{- end }}
  {{- if .Values.service.externalTrafficPolicy }}
  externalTrafficPolicy: "{{ .Values.service.externalTrafficPolicy }}"
  {{- end }}
  {{- if .Values.service.sessionAffinity }}
  sessionAffinity: {{ .Values.service.sessionAffinity }}
  {{- end }}
  {{- if .Values.service.sessionAffinityConfig }}
  sessionAffinityConfig:
    {{- toYaml .Values.service.sessionAffinityConfig | nindent 4 }}
  {{- end }}
  ports:
    {{- range .Values.service.ports }}
    - name: {{ .name }}
      port: {{ int .port }}
      {{- if .targetPort }}
      targetPort: {{ int .targetPort }}
      {{- end }}
      {{- if .nodePort }}
      nodePort: {{ int .nodePort }}
      {{- end }}
      {{- if .protocol }}
      protocol: {{ .protocol }}
      {{- end }}
    {{- end}}
  selector:
    app.kubernetes.io/name: {{ include "ambassador.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  {{- with .Values.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if .Values.service.externalIPs }}
  externalIPs:
    {{- toYaml .Values.service.externalIPs | nindent 4 }}
  {{- end }}
